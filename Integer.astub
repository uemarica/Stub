import org.checkerframework.checker.nullness.qual.*;
package java.lang;

class Integer extends Number implements Comparable<Integer> {
    static final int MIN_VALUE;
    static final int MAX_VALUE;
    static final Class<Integer> TYPE;
    static final int SIZE;
    static final int BYTES;
    static String toString(int arg0, int arg1);
    static String toUnsignedString(int arg0, int arg1);
    static String toHexString(int arg0);
    static String toOctalString(int arg0);
    static String toBinaryString(int arg0);
    static String toString(int arg0);
    static String toUnsignedString(int arg0);
    static int parseInt(String arg0, int arg1) throws NumberFormatException;
    static int parseInt(@Nullable String arg0) throws NumberFormatException;
    static int parseUnsignedInt(String arg0, int arg1) throws NumberFormatException;
    static int parseUnsignedInt(String arg0) throws NumberFormatException;
    static Integer valueOf(String arg0, int arg1) throws NumberFormatException;
    static Integer valueOf(String arg0) throws NumberFormatException;
    static Integer valueOf(int arg0);
    Integer(int arg0);
    Integer(String arg0) throws NumberFormatException;
    byte byteValue();
    short shortValue();
    int intValue();
    long longValue();
    float floatValue();
    double doubleValue();
    String toString();
    int hashCode();
    static int hashCode(int arg0);
    boolean equals(Object arg0);
    static Integer getInteger(String arg0);
    static Integer getInteger(String arg0, int arg1);
    static Integer getInteger(String arg0, Integer arg1);
    static Integer decode(String arg0) throws NumberFormatException;
    int compareTo(Integer arg0);
    static int compare(int arg0, int arg1);
    static int compareUnsigned(int arg0, int arg1);
    static long toUnsignedLong(int arg0);
    static int divideUnsigned(int arg0, int arg1);
    static int remainderUnsigned(int arg0, int arg1);
    static int highestOneBit(int arg0);
    static int lowestOneBit(int arg0);
    static int numberOfLeadingZeros(int arg0);
    static int numberOfTrailingZeros(int arg0);
    static int bitCount(int arg0);
    static int rotateLeft(int arg0, int arg1);
    static int rotateRight(int arg0, int arg1);
    static int reverse(int arg0);
    static int signum(int arg0);
    static int reverseBytes(int arg0);
    static int sum(int arg0, int arg1);
    static int max(int arg0, int arg1);
    static int min(int arg0, int arg1);
}
